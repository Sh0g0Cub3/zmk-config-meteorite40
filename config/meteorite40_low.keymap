#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred"; // change hold to tap
    tapping-term-ms = <200>;
    quick-tap-ms = <150>; // change 200 to 150
};

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <150>; // change 200 to 150
    quick-tap-ms = <150>; // change 200 to 150
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        at_mark: at_mark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp AT>;
            label = "AT_MARK";
        };

        code_block: code_block {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp GRAVE &kp GRAVE &kp GRAVE>;
            label = "CODE_BLOCK";
        };
    };

    keymap {
        compatible = "zmk,keymap";
        layout = &LOW_PROFILE_DEFAULT;

        default_layer {
            display-name = "BASE";
            bindings = <
&kp Q          &kp W         &kp E             &kp R                 &kp T        &kp Y            &kp U     &kp I  &kp O  &kp P
&kp A          &kp S         &kp D             &kp F                 &kp G        &kp H            &kp J     &kp K  &kp L  &kp SEMICOLON
&kp Z          &kp X         &kp C             &kp V                 &kp B        &mkp MB1         &mkp MB2  &kp N  &kp M  &kp COMMA      &kp DOT  &lt 5 SLASH
&mt LCTRL ESC  &kp LEFT_ALT  &mt LEFT_GUI TAB  &mt LEFT_SHIFT SPACE  &lt 2 ENTER  &lt 1 LC(SPACE)  &mo 3     &mo 4
            >;
        };

        Arrow {
            bindings = <
&trans  &trans         &trans         &trans         &trans             &trans         &trans             &trans         &trans     &kp LC(LG(P))
&trans  &kp LC(LG(S))  &trans         &kp LC(LG(F))  &kp LC(LG(LS(B)))  &kp LEFT       &kp DOWN           &kp UP         &kp RIGHT  &trans
&trans  &trans         &kp LC(LG(C))  &kp LC(LG(V))  &kp LC(LG(B))      &kp LG(SPACE)  &kp LS(LG(SPACE))  &kp BACKSPACE  &trans     &trans         &trans  &kp BSPC
&trans  &trans         &trans         &trans         &trans             &trans         &trans             &trans
            >;
        };

        Num {
            bindings = <
&kp N1             &kp N2                    &kp N3             &kp N4                     &kp N5           &kp N6                &kp N7                 &kp N8            &kp N9             &kp N0
&kp C_VOLUME_DOWN  &kp LC(LG(LEFT_BRACKET))  &kp LC(LG(SPACE))  &kp LC(LG(RIGHT_BRACKET))  &kp C_VOLUME_UP  &kp LS(LPAR)          &kp LS(RPAR)           &kp MINUS         &kp PLUS           &kp ASTERISK
&trans             &trans                    &kp LG(MINUS)      &kp LG(NUMBER_0)           &kp LG(EQUAL)    &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COMMA     &kp DOT  &kp FSLH
&trans             &trans                    &trans             &trans                     &trans           &trans                &trans                 &trans
            >;
        };

        Symbol {
            bindings = <
&kp LS(EXCL)   &at_mark      &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(LPAR)            &kp LS(RPAR)             &kp BSLH      &kp LS(TILDE)  &kp GRAVE
&kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)   &kp EQUAL     &kp LS(UNDER)  &kp LBKT                &kp RBKT                 &kp LS(PIPE)  &none          &code_block
&kp GRAVE      &kp SQT       &kp LS(DQT)    &kp LS(PLUS)  &kp MINUS      &kp LA(LG(LEFT_ARROW))  &kp LA(LG(RIGHT_ARROW))  &kp LS(LBRC)  &kp LS(RBRC)   &kp LESS_THAN  &kp GREATER_THAN  &none
&trans         &trans        &trans         &trans        &trans         &trans                  &trans                   &trans
            >;
        };

        Display {
            bindings = <
&trans  &trans             &kp LA(LC(C))      &kp LA(LC(E))      &kp LA(LC(M))      &kp LC(UP_ARROW)        &kp LC(LG(U))  &kp LC(LG(I))      &trans              &trans
&trans  &kp LA(LC(T))      &kp LA(LC(S))      &kp LA(LC(B))      &kp LA(LC(F))      &kp LC(LG(LEFT_ARROW))  &kp LC(LG(J))  &kp LC(LG(K))      &kp LC(LG(RIGHT))   &trans
&trans  &kp LS(LA(LC(F)))  &kp LS(LA(LC(S)))  &kp LS(LA(LC(P)))  &kp LS(LA(LC(D)))  &trans                  &trans         &kp LC(LG(COMMA))  &kp LC(LG(PERIOD))  &kp LC(LG(ENTER))  &trans  &trans
&trans  &trans             &trans             &trans             &trans             &trans                  &trans         &trans
            >;
        };

        Bluetooth {
            display-name = "SETTING";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &none   &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp F5  &kp F6   &kp F7   &kp F8   &none   &bt BT_CLR    &bt BT_CLR_ALL  &none         &none         &none
&kp F9  &kp F10  &kp F11  &kp F12  &none   &none         &bootloader     &none         &none         &none         &none  &none
&trans  &trans   &trans   &trans   &trans  &trans        &trans          &trans
            >;
        };

        layer_1 {
            display-name = "SYMBOLS";
            bindings = <
&kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT  &none     &kp LPAR   &kp RPAR   &kp LBKT   &kp RBKT
&kp CARET  &kp AMPS  &kp STAR  &kp BSLH  &kp PIPE   &kp SEMI  &kp COLON  &kp SQT    &kp DQT    &kp EQUAL
&none      &none     &none     &none     &none      &mkp MB4  &mkp MB5   &kp GRAVE  &kp TILDE  &kp LBRC   &kp RBRC  &kp PLUS
&trans     &trans    &trans    &trans    &trans     &kp DEL   &trans     &trans
            >;
        };

        layer_2 {
            display-name = "NUM / ARROW";
            bindings = <
&kp ASTRK  &kp N7  &kp N8  &kp N9  &kp PLUS   &kp LG(LS(S))  &kp LC(MINUS)  &kp LC(EQUAL)  &kp C_VOL_DN  &kp C_VOL_UP
&kp SLASH  &kp N4  &kp N5  &kp N6  &kp MINUS  &none          &kp LEFT       &kp UP         &kp DOWN      &kp RIGHT
&kp N0     &kp N1  &kp N2  &kp N3  &kp DOT    &mkp MB4       &mkp MB5       &none          &kp LG(LEFT)  &kp LG(UP)    &kp LG(DOWN)  &kp LG(RIGHT)
&trans     &trans  &trans  &trans  &trans     &trans         &trans         &trans
            >;
        };

        layer_3 {
            display-name = "FUNCTION";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none    &none  &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
